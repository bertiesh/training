# port
server:
  port: 8898
  ssl:
    key-store: classpath:keystore.p12
    key-store-password: 123456
    key-store-type: PKCS12
    key-alias: tomcat
  servlet:
    session:
      timeout: 21600

# mysql
spring:
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/training?serverTimezone=Asia/Shanghai&allowMultiQueries=true
    username: root
    password: 123456
    hikari:
      minimum-idle: 5
      # 空闲连接存活最大时间，默认600000（10分钟）
      idle-timeout: 180000
      # 连接池最大连接数，默认是10
      maximum-pool-size: 10
      # 此属性控制从池返回的连接的默认自动提交行为,默认值：true
      auto-commit: true
      # 连接池名称
      pool-name: MyHikariCP
      # 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
      max-lifetime: 1800000
      # 数据库连接超时时间,默认30秒，即30000
      connection-timeout: 30000
      connection-test-query: SELECT 1
  # redis
  redis:
    host: localhost
    port: 6379
    password: 123456
  # mq
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    listener:
      simple:
        retry:
          enabled: true
          max-attempts: 3 #最大重试次数
          initial-interval: 3000 #重试间隔时间（单位毫秒）
  # es
  elasticsearch:
    rest:
      uris: localhost:9200
  # mail
  mail:
    host: XXXX
    username: XXXX
    password: XXXX
    default-encoding: UTF-8
    port: XXXX
    properties:
      mail:
      smtp:
      auth: true
      socketFactory:
      class: javax.net.ssl.SSLSocketFactory
  # image size limit
  servlet:
    multipart:
      max-file-size: 1GB
      max-request-size: 1GB
# MybatisPlus
mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true

# search mode  elasticsearch/mysql
search:
  mode: mysql
# upload mode 可选 oss/local/hdfs
upload:
  mode: hdfs
  hdfs:
    url: hdfs://localhost:9001
    path: /training/
  local:
    # nginx local，default ip:83
    url: http://subip/
    # local address
    path: /usr/local/upload/
  oss:
    url: http://BucketAddress/
    endpoint: OSSendpoint
    accessKeyId: OSSaccessKeyId
    accessKeySecret: OSSaccessKeySecret
    bucketName: OSSbucketName
  cos:
    url: http://BucketAddress/
    secretId: coSecretId
    secretKey: cosSecretKey
    region: cosRegion
    bucketName: cosBucketName
# frontend ip（for mail）
website:
  url: http://localhost

# actuator
management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: '*'
    jmx:
      exposure:
        include: '*'

#third party
qq:
  app-id: QQ APPID
  check-token-url: https://graph.qq.com/oauth2.0/me?access_token={access_token}
  user-info-url: https://graph.qq.com/user/get_user_info?openid={openid}&access_token={access_token}&oauth_consumer_key={oauth_consumer_key}

weibo:
  app-id: 微博APPID
  app-secret: 微博APPSECRET
  grant-type: authorization_code
  redirect-url: 微博回调地址
  access-token-url: https://api.weibo.com/oauth2/access_token
  user-info-url: https://api.weibo.com/2/users/show.json?uid={uid}&access_token={access_token}

#xss
xss:
  enabled: true
  excludes: /content/*
  urlPatterns: /*,/monitor/*,/tool/*
  jsoup:
    level: none